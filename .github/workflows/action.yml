name: 🧪 Test and Coverage
run-name: ${{ github.actor }} is testing TensorAeroSpace 🚀

on:
  push:
    branches:
      - '**'  # Запускать на всех ветках
  pull_request:
    branches:
      - '**'  # Запускать для PR в любые ветки
  workflow_dispatch:  # Позволяет запускать вручную

jobs:
  test:
    name: 🐍 Test Python 3.10 on self-hosted
    runs-on: self-hosted

    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v5

    - name: 🐍 Set up Python 3.10
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: 📦 Cache Poetry dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.cache/pypoetry
          ~/.cache/pip
        key: ubuntu-latest-poetry-3.10-${{ hashFiles('**/poetry.lock') }}
        restore-keys: |
          ubuntu-latest-poetry-3.10-

    - name: 🎭 Install Poetry
      run: |
        python -m ensurepip --upgrade || true
        python -m pip install --upgrade pip
        python -m pip install poetry

    - name: ⚙️ Configure Poetry
      run: |
        poetry config virtualenvs.create true
        poetry config virtualenvs.in-project true

    - name: 🔄 Check and update lock file if needed
      run: |
        if ! poetry check --lock; then
          echo "Lock file is outdated, updating..."
          poetry lock --no-update
        fi

    - name: 📚 Install dependencies
      run: |
        poetry install --with dev

    - name: 🔍 Lint with flake8 (Ubuntu only)
      run: |
        poetry run flake8 tensoraerospace --count --select=E9,F63,F7,F82 --show-source --statistics
        poetry run flake8 tensoraerospace --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: 🧪 Run tests with pytest
      run: |
        poetry run pytest tests/ -v --tb=short

    - name: 📊 Run tests with coverage (Ubuntu Python 3.10 only)
      run: |
        poetry run pytest --junitxml=pytest.xml --cov-report "xml:coverage.xml" --cov=./tensoraerospace tests/ | tee pytest-coverage.txt

    - name: 📈 Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

    - name: 💬 Pytest coverage comment
      if: github.event_name == 'pull_request'
      uses: MishaKav/pytest-coverage-comment@main
      with:
        pytest-coverage-path: ./pytest-coverage.txt
        pytest-xml-coverage-path: ./coverage.xml
        title: 📊 TensorAeroSpace Coverage Report
        badge-title: Coverage
        hide-badge: false
        hide-report: false
        create-new-comment: false
        hide-comment: false
        report-only-changed-files: false
        remove-link-from-badge: false
        unique-id-for-comment: python3.10
        junitxml-path: ./pytest.xml
        junitxml-title: 🧪 TensorAeroSpace Test Results
  docs-coverage:
    name: 📚 Documentation Coverage
    runs-on: self-hosted
    needs: test

    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v5

    - name: 🐍 Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: 📦 Cache Poetry dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.cache/pypoetry
          ~/.cache/pip
        key: ubuntu-latest-poetry-3.10-${{ hashFiles('**/poetry.lock') }}
        restore-keys: |
          ubuntu-latest-poetry-3.10-

    - name: 🎭 Install Poetry
      run: |
        python -m ensurepip --upgrade || true
        python -m pip install --upgrade pip
        python -m pip install poetry

    - name: ⚙️ Configure Poetry
      run: |
        poetry config virtualenvs.create true
        poetry config virtualenvs.in-project true

    - name: 📚 Install dependencies
      run: |
        poetry install --with dev

    - name: 📖 Run Documentation Coverage
      run: |
        poetry run docstr-coverage ./tensoraerospace --skip-magic --skip-init --skip-file-doc --fail-under=70.0

  security:
    name: 🔒 Security Scan
    runs-on: self-hosted
    needs: test

    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v5

    - name: 🐍 Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: 🎭 Install Poetry
      run: |
        python -m ensurepip --upgrade || true
        python -m pip install --upgrade pip
        python -m pip install poetry

    - name: 📚 Install dependencies
      run: |
        poetry install --with dev

    - name: 🔍 Run safety check
      run: |
        poetry run safety check --json || true

    - name: 🛡️ Run bandit security scan
      run: |
        poetry run bandit -r tensoraerospace -f json || true

  build:
    name: 🏗️ Build Package
    runs-on: self-hosted
    needs: [test, docs-coverage]

    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v5

    - name: 🐍 Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: 🎭 Install Poetry
      run: |
        python -m ensurepip --upgrade || true
        python -m pip install --upgrade pip
        python -m pip install poetry

    - name: 📚 Install dependencies
      run: |
        poetry install

    - name: 🏗️ Build package
      run: |
        poetry build

    - name: 📦 Upload build artifacts
      uses: actions/upload-artifact@v4
      continue-on-error: true
      with:
        name: dist
        path: dist/


