Самолет Boeing-747
========================================

Boeing-747 — двухпалубный широкофюзеляжный пассажирский самолет.

.. image:: https://upload.wikimedia.org/wikipedia/commons/b/b8/B-747_Iberia.jpg
  :width: 400
  :alt: Boeing-747

ЛТХ
----

.. list-table:: ЛТХ
   :widths: 30 60
   :header-rows: 1

   * -  Модификация
     -  Boeing-747
   * -  Длина, м
     -  70.7
   * -  Размах крыла, м
     -    64.4
   * -   Высота самолета,м
     -      19.4
   * -  Площадь крыла, м2
     -     541.2
   * -  Нормальная взлетная масса, кг
     - 11467

Математическая модель 
---------------------

Объект управления построен в пространстве состояний как и большинство объектов управления в данной библиотеке. Значения матрицы пространства состояний взяты из статьи ниже.



.. math::
  
  \dot{x}=Ax+Bu

  y=Cx+Du

Так как объект управления представляет собой объект без внутренних возмущающих процессов, выход системы :math:`y` не учитывается в процессе моделирования, поскольку матрицы :math:`C` и :math:`D` представляют собой диагональную матрицу и нулевой вектор.


.. math::


  \begin{bmatrix}
  \dot{u} \\
  \dot{w} \\
  \dot{q} \\
  \dot{\theta} \\
  \end{bmatrix}
  = 
  \begin{bmatrix}
  x_u & x_w & x_q & x_{\theta} \\
  z_u & z_w & z_q & z_{\theta} \\
  m_u & m_w & m_q & m_{\theta} \\
  0 & 0 & 1 & 0 \\
  \end{bmatrix}
  \begin{bmatrix}
  u \\
  w \\
  q \\
  \theta \\
  \end{bmatrix}
  +
  \begin{bmatrix}
  x_{\eta} \\
  z_{\eta} \\
  m_{\eta} \\
  0
  \end{bmatrix}
  \eta

Поэтому объект управления представлен в следующем виде


.. math::


  \begin{bmatrix}
  \dot{u} \\
  \dot{w} \\
  \dot{q} \\
  \dot{\theta} \\
  \end{bmatrix}
  = 
  \begin{bmatrix}
  -0.0069 & -0.0139 & 0 & -9.81 \\
  -0.0905 & -0.6975 & 235.8928 & 0 \\
  0.0004 & -0.0034 & 0 & 0.0911 \\
  0 & 0 & 1 & 0 \\
  \end{bmatrix}
  \begin{bmatrix}
  u \\
  w \\
  q \\
  \theta \\
  \end{bmatrix}
  +
  \begin{bmatrix}
  -0.0001 \\
  -5.5079 \\
  -1.1569 \\
  0
  \end{bmatrix}
  \eta

где

-  :math:`u` Продольная скорость ЛА [м/с]
-  :math:`w` Нормальная скорость ЛА [м/с] 
-  :math:`q` Угловая скорость Тангажа [град/с]
-  :math:`\theta` - Тангаж [град]
-  :math:`\eta` - Угол отклонения стабилизатора [град]
-  :math:`x_u` - частная производная продольной силы по продольной скорости
-  :math:`x_w` - частная производная продольной силы по нормальной скорости
-  :math:`x_q` - частная производная продольной силы по угловой скорости
-  :math:`x_{\theta}` - частная производная продольной силы по углу тангажа
-  :math:`z_u` - частная производная вертикальной силы по продольной скорости
-  :math:`z_w` - частная производная вертикальной силы по нормальной скорости
-  :math:`z_q` - частная производная вертикальной силы по угловой скорости
-  :math:`z_{\theta}` - частная производная вертикальной силы по углу тангажа
-  :math:`m_u` - частная производная момента тангажа по продольной скорости
-  :math:`m_w` - частная производная момента тангажа по нормальной скорости
-  :math:`m_q` - частная производная момента тангажа по угловой скорости
-  :math:`m_{\theta}` - частная производная момента тангажа по углу тангажа


Модель
------

.. autoclass:: tensoraerospace.aerospacemodel.LongitudinalB747
    :members:


Среда моделирования OpenAI Gym
------------------------------

.. autoclass:: tensoraerospace.envs.LinearLongitudinalB747
    :members:


Источники
----------

1.  Heffley R. K., Jewell W. F. Aircraft handling qualities data. – NASA, 1972. – №. AD-A277031. (https://ntrs.nasa.gov/citations/19730003312)
2.  Abd Elwahab S. et al. Evaluation of boeing 747-e lateral autopilot using flying and handling qualities specifications //2017 International Conference on Communication, Control, Computing and Electronics Engineering (ICCCCEE). – IEEE, 2017. – С. 1-8. (https://ieeexplore.ieee.org/document/7867653)


Пример использования
--------------------

.. code:: python

    import gymnasium as gym 
    import numpy as np
    from tqdm import tqdm

    from tensoraerospace.envs import LinearLongitudinalB747
    from tensoraerospace.utils import generate_time_period, convert_tp_to_sec_tp
    from tensoraerospace.signals.standart import unit_step

    dt = 0.01  # Дискретизация
    tp = generate_time_period(tn=20, dt=dt) # Временной периуд
    tps = convert_tp_to_sec_tp(tp, dt=dt)
    number_time_steps = len(tp) # Количество временных шагов
    reference_signals = np.reshape(unit_step(degree=5, tp=tp, time_step=10, output_rad=True), [1, -1]) # Заданный сигнал

    env = gym.make('LinearLongitudinalB747-v0',
               number_time_steps=number_time_steps, 
               initial_state=[[0],[0],[0]],
               reference_signal = reference_signals)
    env.reset() 

    observation, reward, done, info = env.step(np.array([[1]]))
